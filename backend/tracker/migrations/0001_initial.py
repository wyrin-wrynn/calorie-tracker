# Generated by Django 5.2.5 on 2025-08-29 03:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Food",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "default_unit",
                    models.CharField(
                        choices=[
                            ("g", "Grams"),
                            ("piece", "Piece"),
                            ("slice", "Slice"),
                            ("bowl", "Bowl"),
                            ("cup", "Cup"),
                            ("katori", "Katori"),
                            ("other", "Other"),
                        ],
                        default="g",
                        max_length=20,
                    ),
                ),
                ("calories", models.FloatField(help_text="Calories per unit")),
                ("protein", models.FloatField(default=0, help_text="Protein per unit (g)")),
                ("carbs", models.FloatField(default=0, help_text="Carbs per unit (g)")),
                ("fat", models.FloatField(default=0, help_text="Fat per unit (g)")),
                ("fiber", models.FloatField(default=0, help_text="Fiber per unit (g)")),
                ("sugar", models.FloatField(default=0, help_text="Sugar per unit (g)")),
                ("sodium", models.FloatField(default=0, help_text="Sodium per unit (mg)")),
                (
                    "cholesterol",
                    models.FloatField(default=0, help_text="Cholesterol per unit (mg)"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("start_date", models.DateField(help_text="Date from which this goal is active")),
                ("calorie_goal", models.FloatField()),
                ("protein_goal", models.FloatField(default=0)),
                ("carb_goal", models.FloatField(default=0)),
                ("fat_goal", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="DiaryEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField()),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("supper", "Supper"),
                            ("dinner", "Dinner"),
                            ("snack", "Snack"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity", models.FloatField(default=1)),
                ("unit", models.CharField(default="g", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "food",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="tracker.food",
                    ),
                ),
            ],
        ),
    ]
